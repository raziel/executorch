#include <core/operator_registry.h>

#include <build/generated/UnboxingFunctions.h>

// ${generated_comment}

// NOTE [Sharded File]: This file is generated in a sharded fashion to speed up
// incremental rebuilds. See the comment at the top of
// templates/VariableType.cpp for an analogous, in-depth discussion.
//
// Generated by tools/jit/gen_unboxing.py. This file registers all ATen ops into JIT op registry instead of c10
// dispatcher. JIT op registry only takes boxed kernels, so we are calling unboxing functions in UnboxingFunctions.h
// to cast arguments into C++ types (instead of IValue) and delegate to unboxed kernels.
namespace at = torch::executor;

namespace torch {
namespace exectuor {

namespace {

static RegisterOperators reg({
    // Generated operators
    ${unboxed_ops}
});

} // anon namespace


}} // namespace torch::executor
