// ${generated_comment}
#include <vector>
#include <Functions.h>
#include <Evalue.h>

#include <algorithm>
#include <array>
#include <cstddef>
#include <cstring>
#include <sstream>
#include <stdexcept>
#include <tuple>
#include <unordered_map>
#include <unordered_set>
#include <utility>
#include <vector>
// Generated by tools/jit/gen_unboxing.py. This file declares code generated boxed C++ functions for operators,
// base off of native_functions.yaml (or similar yaml file with the same syntax). The definition of such a boxed
// function will pop out IValues from the stack then convert them into the correct C++ types based on given schema. This
// unboxing logic is an alternative to template-based metaprogramming unboxing.

#pragma once
namespace at = torch::executor;

namespace torch {
namespace executor {
namespace unboxing {

// Generated function declaration
${declarations}

} // namespace unboxing
} // namespace executor
} // namespace torch
